openapi: 3.0.3
info:
  title: Simple Country API
  description: |-
    A simple API which wrapes an external API and provides the following possibilities:
    - Sorted list of countries by population density in descending order.
    - Country in Asia containing the most bordering countries of a different region.
    
    Some useful links:
    - [The external API](https://gitlab.com/restcountries/restcountries)
  version: 0.0.1-SNAPSHOT
  contact:
    name: Pooya DG
    email: pooyadg@thecompany.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: http://localhost:8080
tags:
  - name: country
    description: operations on countries
paths:
  /countries:
    get:
      tags:
        - country
      summary: Get countries provided by external api
      operationId: getCountries
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Country'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /countries/population-density:
    get:
      tags:
        - country
      summary: Get countries sorted by population density
      operationId: getCountriesByPopulationDensity
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Country'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /countries/country-with-most-bordering:
    get:
      tags:
        - country
      summary: Get a country by region with the most bordering countries of a different region
      operationId: getCountryWithMostBorderingByRegion
      parameters:
        - name: region
          in: query
          required: true
          description: Name of the region which can be one of asia, europe, africa, americas, oceania or antarctic.
          schema:
            type: string
            pattern: ^(?i)(asia|europe|africa|americas|oceania|antarctic)$
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Country'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    Country:
      type: object
      properties:
        name:
          type: string
        area:
          type: integer
          format: int64
        population:
          type: integer
          format: int64
        region:
          type: string
        cca3:
          type: string
        borders:
          type: array
          items:
            type: string
        populationDensity:
          type: number
          format: double
    ErrorResponse:
      type: object
      properties:
        message:
          type: string